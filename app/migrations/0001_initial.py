# Generated by Django 4.0 on 2022-05-02 02:06

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rank', models.CharField(choices=[('A', 'Admin'), ('M', 'Manager'), ('V', 'Viewer')], default='V', max_length=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='global_settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_inventory_changes', models.BooleanField(default=False)),
                ('allow_adding_new_users', models.BooleanField(default=False)),
                ('allow_inventory_purchases', models.BooleanField(default=False)),
                ('allow_paring_data', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'global_settings',
            },
        ),
        migrations.CreateModel(
            name='history',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
                ('time', models.DateField()),
            ],
            options={
                'db_table': 'history',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('alert', models.BooleanField(default=True)),
                ('image_path', models.CharField(blank=True, max_length=500)),
                ('stock', models.IntegerField(default=0)),
                ('threshold', models.IntegerField(default=1)),
                ('part_number', models.CharField(blank=True, max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='mock_inventory',
            fields=[
                ('item', models.IntegerField(primary_key=True, serialize=False)),
                ('alert', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=500)),
                ('amount', models.IntegerField()),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'mock_inventory',
            },
        ),
        migrations.CreateModel(
            name='personal_user_settings',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_profile', serialize=False, to='app.customuser')),
                ('show_alerts', models.BooleanField(default=True)),
                ('font_type', models.CharField(choices=[('Arial', 'Arial'), ('Courier New', 'Courier'), ('Times New Roman', 'Times New Roman'), ('Verdana', 'Verdana')], default='Arial', max_length=20)),
                ('paging_by', models.PositiveSmallIntegerField(choices=[(5, '5'), (10, '10'), (15, '15'), (25, '25'), (50, '50'), (100, '100'), (0, 'All')], default=10)),
                ('rank', models.CharField(choices=[('A', 'Admin'), ('M', 'Manager'), ('V', 'Viewer')], default='V', max_length=2)),
            ],
            options={
                'db_table': 'personal_user_settings',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.URLField(max_length=500)),
                ('name', models.CharField(max_length=100)),
                ('itemfk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.item')),
            ],
        ),
        migrations.CreateModel(
            name='recent_new_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descrption', models.CharField(max_length=45)),
                ('created_date', models.DateTimeField(default=datetime.datetime(2022, 5, 2, 2, 6, 19, 623478, tzinfo=utc), editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customuser')),
            ],
            options={
                'db_table': 'recent_new_user',
            },
        ),
        migrations.CreateModel(
            name='recent_new_item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=45)),
                ('newItem', models.CharField(max_length=45)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customuser')),
            ],
            options={
                'db_table': 'recent_new_item',
            },
        ),
        migrations.CreateModel(
            name='recent_alerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=45)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customuser')),
            ],
            options={
                'db_table': 'recent_alerts',
            },
        ),
        migrations.CreateModel(
            name='purchase_history',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descrption', models.CharField(max_length=45)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customuser')),
            ],
            options={
                'db_table': 'purchase_history',
            },
        ),
        migrations.CreateModel(
            name='inventory_changes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descrption', models.CharField(max_length=45)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.customuser')),
            ],
            options={
                'db_table': 'inventory_changes',
            },
        ),
    ]
